AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  LambdaBucket:
    Type: String

  LambdaKey:
    Type: String

  LambdaKeyVersion:
    Type: String

Resources:

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: 'Allow'
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        -
          PolicyName: 'root'
          PolicyDocument:
            Statement:
              -
                Effect: 'Allow'
                Action:
                  - 'logs:*'
                Resource:
                  - 'arn:aws:logs:*:*:*'
              -
                Effect: 'Allow'
                Action:
                  - 's3:GetObject'
                Resource:
                  - 'arn:aws:s3:::*'
              -
                Effect: 'Allow'
                Action:
                  - 'rekognition:DetectLabels'
                Resource: '*'

  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucket
        S3Key: !Ref LambdaKey
        S3ObjectVersion: !Ref LambdaKeyVersion
      Description: 'Lambda Function - SD Magic Night 2017-03-21'
      Handler: 'ImageTweeter::ImageTweeter.LambdaHandler::Handler'
      MemorySize: 128
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: 'dotnetcore1.0'
      Timeout: 30

  LambdaFunctionPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:*'
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: 's3.amazonaws.com'

Outputs:

  LambdaFunctionArn:
    Value: !GetAtt LambdaFunction.Arn
